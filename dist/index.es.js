import { LRParser } from '@lezer/lr';
import { NodeProp } from '@lezer/common';

// This file was generated by lezer-generator. You probably shouldn't edit it.
const parser = LRParser.deserialize({
  version: 13,
  states: "$bO]QPOOOOQO'#Cd'#CdOtQQO'#CgO!PQPO'#ClOOQO'#Cr'#CrQOQPOOOOQO'#Ci'#CiO!WQPO'#ChO!]QPO'#CtOOQO,59R,59RO!eQPO,59RO!jQPO'#CxOOQO,59W,59WO!rQPO,59WO]QPO,59SOwQQO'#CmO!wQPO,59`OOQO1G.m1G.mO]QPO'#CnO#PQPO,59dOOQO1G.r1G.rOOQO1G.n1G.nOOQO,59X,59XOOQO-E6k-E6kOOQO,59Y,59YOOQO-E6l-E6l",
  stateData: "#X~OeOSPOSQOS~OSSOTSOUSOVSOYQO_ROgPO~OXXOgUOiUO~O^[O~P]Oj^O~Ok_OXhX~OXaO~OkbO^lX~O^dO~Ok_OXha~OkbO^la~O",
  goto: "!nmPPPPPPPPnPPntzPPn!O!UPPP![P!hPPP!kXSOR^bQWQRf_TVQ_Q`WRg`QcZRicQTOQZRQe^RhbRYQR]R",
  nodeNames: "âš  LineComment BlockComment JsonText True False Null Number String } { Object Property PropertyName ] [ Array",
  maxTerm: 28,
  nodeProps: [
    [NodeProp.openedBy, 9,"{",14,"["],
    [NodeProp.closedBy, 10,"}",15,"]"]
  ],
  skippedNodes: [0,1,2],
  repeatNodeCount: 2,
  tokenData: "@p~RtOX#cXY$gYZ$gZ]#c]^$g^p#cpq$gqr#crs$lsw#cwx&xx|#c|})n}!O)s!O!P0v!P!Q1f!Q!R2o!R![3m![!]4q!]!}#c!}#O4v#O#P#c#P#Q4{#Q#S#c#S#T5Q#T#Y#c#Y#Z7v#Z#b#c#b#c;W#c#h#c#h#i=v#i#o#c#o#p@f#p#q#c#q#r@k#r~#cQ#fVOX#{XY#cZ]#{]^#c^p#{pq#cq~#{Q$QViQOX#{XY#cZ]#{]^#c^p#{pq#cq~#{~$lOe~~$oUpq$lqr$lrs%Rs#O$l#O#P%W#P~$l~%WOg~~%ZXrs$l!P!Q$l#O#P$l#U#V$l#Y#Z$l#b#c$l#f#g$l#h#i$l#i#j%v~%yR!Q![&S!c!i&S#T#Z&S~&VR!Q![&`!c!i&`#T#Z&`~&cR!Q![&l!c!i&l#T#Z&l~&oR!Q![$l!c!i$l#T#Z$l~&{Vpq&xqr&xsw&xwx'bx#O&x#O#P'|#P~&x~'gVg~pq&xqr&xsw&xwx'bx#O&x#O#P'|#P~&x~(PXrs&x!P!Q&x#O#P&x#U#V&x#Y#Z&x#b#c&x#f#g&x#h#i&x#i#j(l~(oR!Q![(x!c!i(x#T#Z(x~({R!Q![)U!c!i)U#T#Z)U~)XR!Q![)b!c!i)b#T#Z)b~)eR!Q![&x!c!i&x#T#Z&x~)sOk~R)v[OX#{XY#cZ]#{]^#c^p#{pq#cq!O#{!O!P*l!P!Q#{!Q!R.p!R![/p![~#{R*qXiQOX#{XY#cZ]#{]^#c^p#{pq#cq!Q#{!Q![+^![~#{R+e]VPiQOX#{XY#cZ]#{]^#c^p#{pq#cq!Q#{!Q![+^![!g#{!g!h,^!h#X#{#X#Y,^#Y~#{R,c]iQOX#{XY#cZ]#{]^#c^p#{pq#cq{#{{|-[|}#{}!O-[!O!Q#{!Q![-|![~#{R-aXiQOX#{XY#cZ]#{]^#c^p#{pq#cq!Q#{!Q![-|![~#{R.TXVPiQOX#{XY#cZ]#{]^#c^p#{pq#cq!Q#{!Q![-|![~#{R.w]VPiQOX#{XY#cZ]#{]^#c^p#{pq#cq!O#{!O!P+^!P!g#{!g!h,^!h#X#{#X#Y,^#Y~#{R/w_VPiQOX#{XY#cZ]#{]^#c^p#{pq#cq!O#{!O!P+^!P!Q#{!Q![/p![!g#{!g!h,^!h#X#{#X#Y,^#Y~#{R0yXOX#{XY#cZ]#{]^#c^p#{pq#cq!Q#{!Q![+^![~#{~1iQz{1o!P!Q2d~1rROz1oz{1{{~1o~2OTOz1oz{1{{!P1o!P!Q2_!Q~1o~2dOQ~~2iQP~OY2dZ~2dR2t]VPOX#{XY#cZ]#{]^#c^p#{pq#cq!O#{!O!P+^!P!g#{!g!h,^!h#X#{#X#Y,^#Y~#{R3r_VPOX#{XY#cZ]#{]^#c^p#{pq#cq!O#{!O!P+^!P!Q#{!Q![/p![!g#{!g!h,^!h#X#{#X#Y,^#Y~#{~4vOj~~4{O_~~5QO^~~5TVpq5Qqr5Qs#O5Q#O#P5j#P#S5Q#S#T7[#T~5Q~5mXrs5Q!P!Q5Q#O#P5Q#U#V5Q#Y#Z5Q#b#c5Q#f#g5Q#h#i5Q#i#j6Y~6]R!Q![6f!c!i6f#T#Z6f~6iR!Q![6r!c!i6r#T#Z6r~6uR!Q![7O!c!i7O#T#Z7O~7RR!Q![5Q!c!i5Q#T#Z5Q~7aVg~pq5Qqr5Qs#O5Q#O#P5j#P#S5Q#S#T7[#T~5QR7yXOX#{XY#cZ]#{]^#c^p#{pq#cq#T#{#T#U8f#U~#{R8kXiQOX#{XY#cZ]#{]^#c^p#{pq#cq#`#{#`#a9W#a~#{R9]XiQOX#{XY#cZ]#{]^#c^p#{pq#cq#g#{#g#h9x#h~#{R9}XiQOX#{XY#cZ]#{]^#c^p#{pq#cq#X#{#X#Y:j#Y~#{R:qVTPiQOX#{XY#cZ]#{]^#c^p#{pq#cq~#{R;ZXOX#{XY#cZ]#{]^#c^p#{pq#cq#i#{#i#j;v#j~#{R;{XiQOX#{XY#cZ]#{]^#c^p#{pq#cq#`#{#`#a<h#a~#{R<mXiQOX#{XY#cZ]#{]^#c^p#{pq#cq#`#{#`#a=Y#a~#{R=aVUPiQOX#{XY#cZ]#{]^#c^p#{pq#cq~#{R=yXOX#{XY#cZ]#{]^#c^p#{pq#cq#f#{#f#g>f#g~#{R>kXiQOX#{XY#cZ]#{]^#c^p#{pq#cq#i#{#i#j?W#j~#{R?]XiQOX#{XY#cZ]#{]^#c^p#{pq#cq#X#{#X#Y?x#Y~#{R@PVSPiQOX#{XY#cZ]#{]^#c^p#{pq#cq~#{~@kOY~~@pOX~",
  tokenizers: [0, 1],
  topRules: {"JsonText":[0,3]},
  tokenPrec: 0
});

export { parser };
